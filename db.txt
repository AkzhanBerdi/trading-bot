python3 database_diagnostic.py

üöÄ Trading Bot Database Diagnostic Tool
======================================================================
üìÇ Current directory: /home/aberdeev/crypto-trading/trading-bot

üîç Checking Database Locations
==================================================
üìÅ Checking: data/trading_history.db
   Absolute: /home/aberdeev/crypto-trading/trading-bot/data/trading_history.db
   Exists: True
   Size: 32768 bytes
   Tables: ['trades', 'sqlite_sequence', 'bot_events']
   Trades count: 0

üìÅ Checking: trading_bot/data/trading_history.db
   Absolute: /home/aberdeev/crypto-trading/trading-bot/trading_bot/data/trading_history.db
   Exists: True
   Size: 1511424 bytes
   Tables: ['trades', 'sqlite_sequence', 'portfolio_snapshots', 'bot_events', 'performance_metrics', 'trades_backup']
   Trades count: 37

üìÅ Checking: /home/aberdeev/crypto-trading/trading-bot/data/trading_history.db
   Absolute: /home/aberdeev/crypto-trading/trading-bot/data/trading_history.db
   Exists: True
   Size: 32768 bytes
   Tables: ['trades', 'sqlite_sequence', 'bot_events']
   Trades count: 0

üìÅ Checking: /home/aberdeev/crypto-trading/trading-bot/trading_bot/data/trading_history.db
   Absolute: /home/aberdeev/crypto-trading/trading-bot/trading_bot/data/trading_history.db
   Exists: True
   Size: 1511424 bytes
   Tables: ['trades', 'sqlite_sequence', 'portfolio_snapshots', 'bot_events', 'performance_metrics', 'trades_backup']
   Trades count: 37

üî¨ Analyzing Database: /home/aberdeev/crypto-trading/trading-bot/data/trading_history.db
==================================================
1Ô∏è‚É£ Table Schemas:
   CREATE TABLE trades (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                        session_id TEXT,
                        symbol TEXT NOT NULL,
                        side TEXT NOT NULL,
                        quantity REAL NOT NULL,
                        price REAL NOT NULL,
                        total_value REAL NOT NULL,
                        order_id TEXT,
                        grid_level INTEGER,
                        commission REAL DEFAULT 0,
                        commission_asset TEXT,
                        execution_time_ms INTEGER,
                        profit_loss REAL DEFAULT 0,
                        raw_order_data TEXT
                    )
   CREATE TABLE sqlite_sequence(name,seq)
   CREATE TABLE bot_events (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                        session_id TEXT,
                        event_type TEXT NOT NULL,
                        message TEXT,
                        severity TEXT DEFAULT 'INFO',
                        details TEXT
                    )

2Ô∏è‚É£ Trades Table Analysis:
   Columns:
     id (INTEGER)
     timestamp (DATETIME)
     session_id (TEXT)
     symbol (TEXT)
     side (TEXT)
     quantity (REAL)
     price (REAL)
     total_value (REAL)
     order_id (TEXT)
     grid_level (INTEGER)
     commission (REAL)
     commission_asset (TEXT)
     execution_time_ms (INTEGER)
     profit_loss (REAL)
     raw_order_data (TEXT)
   Total trades: 0

3Ô∏è‚É£ Bot Events:
   Total events: 20
     BOT_START: 7
     BOT_STOP: 6
     GRID_INIT: 7

üî¨ Analyzing Database: /home/aberdeev/crypto-trading/trading-bot/trading_bot/data/trading_history.db
==================================================
1Ô∏è‚É£ Table Schemas:
   CREATE TABLE trades (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                        session_id TEXT,
                        symbol TEXT NOT NULL,
                        side TEXT NOT NULL,
                        quantity REAL NOT NULL,
                        price REAL NOT NULL,
                        total_value REAL NOT NULL,
                        order_id TEXT,
                        grid_level INTEGER,
                        strategy TEXT DEFAULT 'GRID',
                        status TEXT DEFAULT 'FILLED',
                        commission REAL DEFAULT 0,
                        commission_asset TEXT,
                        profit_loss REAL DEFAULT 0,
                        execution_time_ms INTEGER,
                        notes TEXT,
                        raw_order_data TEXT,
                        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
                    , datetime TEXT)
   CREATE TABLE sqlite_sequence(name,seq)
   CREATE TABLE portfolio_snapshots (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                        session_id TEXT,
                        total_value REAL NOT NULL,
                        total_pnl REAL DEFAULT 0,
                        daily_change REAL DEFAULT 0,
                        assets TEXT,  -- JSON string of all assets
                        balances TEXT,  -- JSON string of balances
                        notes TEXT
                    )
   CREATE TABLE bot_events (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                        session_id TEXT,
                        event_type TEXT NOT NULL,
                        event_category TEXT,  -- START/STOP/ERROR/TRADE/HEALTH
                        message TEXT,
                        details TEXT,  -- JSON string
                        severity TEXT DEFAULT 'INFO'  -- INFO/WARNING/ERROR/CRITICAL
                    )
   CREATE TABLE performance_metrics (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                        session_id TEXT,
                        metric_type TEXT,  -- DAILY/WEEKLY/MONTHLY
                        total_trades INTEGER,
                        total_volume REAL,
                        total_pnl REAL,
                        win_rate REAL,
                        avg_trade_pnl REAL,
                        max_drawdown REAL,
                        sharpe_ratio REAL,
                        details TEXT  -- JSON
                    )
   CREATE TABLE trades_backup(
  id INT,
  timestamp NUM,
  session_id TEXT,
  symbol TEXT,
  side TEXT,
  quantity REAL,
  price REAL,
  total_value REAL,
  order_id TEXT,
  grid_level INT,
  strategy TEXT,
  status TEXT,
  commission REAL,
  commission_asset TEXT,
  profit_loss REAL,
  execution_time_ms INT,
  notes TEXT,
  raw_order_data TEXT,
  created_at NUM
)

2Ô∏è‚É£ Trades Table Analysis:
   Columns:
     id (INTEGER)
     timestamp (DATETIME)
     session_id (TEXT)
     symbol (TEXT)
     side (TEXT)
     quantity (REAL)
     price (REAL)
     total_value (REAL)
     order_id (TEXT)
     grid_level (INTEGER)
     strategy (TEXT)
     status (TEXT)
     commission (REAL)
     commission_asset (TEXT)
     profit_loss (REAL)
     execution_time_ms (INTEGER)
     notes (TEXT)
     raw_order_data (TEXT)
     created_at (DATETIME)
     datetime (TEXT)
   Total trades: 37

   Sample trades:
     Trade 1: (1, '2025-06-26 18:51:39', 'session_1751027187_304416', 'ADAUSDT', 'BUY', 91.0, 0.5522, 50.25, '7213732839', 1, 'GRID', 'FILLED', 0.05025, 'USDT', 0.0, 2500, 'Manual entry - missing from original DB', None, '2025-07-01 04:52:01', '2025-06-26 18:51:39')
     Trade 2: (2, '2025-06-26 19:10:56', 'session_1751027187_304416', 'AVAXUSDT', 'BUY', 2.92, 17.15, 50.08, '4713973623', 1, 'GRID', 'FILLED', 0.00292, 'AVAX', 0.0, 2300, 'Manual entry - missing from original DB', None, '2025-07-01 04:52:07', '2025-06-26 19:10:56')
     Trade 3: (3, '2025-06-27 18:40:42', 'session_1751027187_304416', 'AVAXUSDT', 'BUY', 2.91, 17.18, 49.9938, '4716460829', 1, 'GRID', 'FILLED', 0.00291, 'AVAX', 0.0, 2492, None, '{"symbol": "AVAXUSDT", "orderId": 4716460829, "orderListId": -1, "clientOrderId": "x-HNA2TXFJbb62cb21c0d3715081c1a0", "transactTime": 1751049642427, "price": "0.00000000", "origQty": "2.91000000", "executedQty": "2.91000000", "origQuoteOrderQty": "0.00000000", "cummulativeQuoteQty": "49.99380000", "status": "FILLED", "timeInForce": "GTC", "type": "MARKET", "side": "BUY", "workingTime": 1751049642427, "fills": [{"price": "17.18000000", "qty": "2.91000000", "commission": "0.00291000", "commissionAsset": "AVAX", "tradeId": 379074150}], "selfTradePreventionMode": "EXPIRE_MAKER"}', '2025-07-01 04:52:13', '2025-06-27 18:40:42')
     Trade 4: (4, '2025-06-28 16:30:22', 'session_1751027187_304416', 'AVAXUSDT', 'SELL', 2.85, 17.91, 51.0435, '4717466296', 1, 'GRID', 'FILLED', 0.0510435, 'USDT', 0.0, 2457, None, '{"symbol": "AVAXUSDT", "orderId": 4717466296, "orderListId": -1, "clientOrderId": "x-HNA2TXFJ58a00d387313a0f504545f", "transactTime": 1751128223339, "price": "0.00000000", "origQty": "2.85000000", "executedQty": "2.85000000", "origQuoteOrderQty": "0.00000000", "cummulativeQuoteQty": "51.04350000", "status": "FILLED", "timeInForce": "GTC", "type": "MARKET", "side": "SELL", "workingTime": 1751128223339, "fills": [{"price": "17.91000000", "qty": "2.85000000", "commission": "0.05104350", "commissionAsset": "USDT", "tradeId": 379127987}], "selfTradePreventionMode": "EXPIRE_MAKER"}', '2025-07-01 04:52:20', '2025-06-28 16:30:22')
     Trade 5: (5, '2025-06-29 23:08:46', 'session_1751027187_304416', 'ADAUSDT', 'SELL', 90.0, 0.5803, 52.227, '7223770896', 1, 'GRID', 'FILLED', 0.052227, 'USDT', 0.0, 1828, None, '{"symbol": "ADAUSDT", "orderId": 7223770896, "orderListId": -1, "clientOrderId": "x-HNA2TXFJ36c4669ffe13feba5720a", "transactTime": 1751238526589, "price": "0.00000000", "origQty": "90.00000000", "executedQty": "90.00000000", "origQuoteOrderQty": "0.00000000", "cummulativeQuoteQty": "52.22700000", "status": "FILLED", "timeInForce": "GTC", "type": "MARKET", "side": "SELL", "workingTime": 1751238526589, "fills": [{"price": "0.58030000", "qty": "90.00000000", "commission": "0.05222700", "commissionAsset": "USDT", "tradeId": 673849061}], "selfTradePreventionMode": "EXPIRE_MAKER"}', '2025-07-01 04:52:25', '2025-06-29 23:08:46')

   Column test - SELECT symbol, side, quantity, price, timestamp:
     ‚úÖ SUCCESS: ('ADAUSDT', 'BUY', 91.0, 0.5522, '2025-06-26 18:51:39')

3Ô∏è‚É£ Bot Events:
   Total events: 5790
     BOT_START: 28
     BOT_STOP: 24
     CYCLE_COMPLETE: 5339
     EMERGENCY_STOP: 1
     GRID_INIT: 27
     GRID_RESET: 12
     MANUAL_STOP: 6
     PAUSE: 5
     PORTFOLIO_ERROR: 2
     PORTFOLIO_UPDATE: 64
     RESUME: 2
     RISK_MODE_CHANGE: 1
     START: 15
     STOP: 11
     TELEGRAM_COMMAND: 236
     TELEGRAM_CONSERVATIVE_MODE: 1
     TELEGRAM_EMERGENCY_STOP: 1
     TEST_EVENT: 1
     TRADE_ATTEMPT: 5
     TRADING_PAUSED: 1
     TRADING_RESUMED: 8

üî¨ Analyzing Database: /home/aberdeev/crypto-trading/trading-bot/data/trading_history.db
==================================================
1Ô∏è‚É£ Table Schemas:
   CREATE TABLE trades (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                        session_id TEXT,
                        symbol TEXT NOT NULL,
                        side TEXT NOT NULL,
                        quantity REAL NOT NULL,
                        price REAL NOT NULL,
                        total_value REAL NOT NULL,
                        order_id TEXT,
                        grid_level INTEGER,
                        commission REAL DEFAULT 0,
                        commission_asset TEXT,
                        execution_time_ms INTEGER,
                        profit_loss REAL DEFAULT 0,
                        raw_order_data TEXT
                    )
   CREATE TABLE sqlite_sequence(name,seq)
   CREATE TABLE bot_events (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                        session_id TEXT,
                        event_type TEXT NOT NULL,
                        message TEXT,
                        severity TEXT DEFAULT 'INFO',
                        details TEXT
                    )

2Ô∏è‚É£ Trades Table Analysis:
   Columns:
     id (INTEGER)
     timestamp (DATETIME)
     session_id (TEXT)
     symbol (TEXT)
     side (TEXT)
     quantity (REAL)
     price (REAL)
     total_value (REAL)
     order_id (TEXT)
     grid_level (INTEGER)
     commission (REAL)
     commission_asset (TEXT)
     execution_time_ms (INTEGER)
     profit_loss (REAL)
     raw_order_data (TEXT)
   Total trades: 0

3Ô∏è‚É£ Bot Events:
   Total events: 20
     BOT_START: 7
     BOT_STOP: 6
     GRID_INIT: 7

üî¨ Analyzing Database: /home/aberdeev/crypto-trading/trading-bot/trading_bot/data/trading_history.db
==================================================
1Ô∏è‚É£ Table Schemas:
   CREATE TABLE trades (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                        session_id TEXT,
                        symbol TEXT NOT NULL,
                        side TEXT NOT NULL,
                        quantity REAL NOT NULL,
                        price REAL NOT NULL,
                        total_value REAL NOT NULL,
                        order_id TEXT,
                        grid_level INTEGER,
                        strategy TEXT DEFAULT 'GRID',
                        status TEXT DEFAULT 'FILLED',
                        commission REAL DEFAULT 0,
                        commission_asset TEXT,
                        profit_loss REAL DEFAULT 0,
                        execution_time_ms INTEGER,
                        notes TEXT,
                        raw_order_data TEXT,
                        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
                    , datetime TEXT)
   CREATE TABLE sqlite_sequence(name,seq)
   CREATE TABLE portfolio_snapshots (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                        session_id TEXT,
                        total_value REAL NOT NULL,
                        total_pnl REAL DEFAULT 0,
                        daily_change REAL DEFAULT 0,
                        assets TEXT,  -- JSON string of all assets
                        balances TEXT,  -- JSON string of balances
                        notes TEXT
                    )
   CREATE TABLE bot_events (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                        session_id TEXT,
                        event_type TEXT NOT NULL,
                        event_category TEXT,  -- START/STOP/ERROR/TRADE/HEALTH
                        message TEXT,
                        details TEXT,  -- JSON string
                        severity TEXT DEFAULT 'INFO'  -- INFO/WARNING/ERROR/CRITICAL
                    )
   CREATE TABLE performance_metrics (
                        id INTEGER PRIMARY KEY AUTOINCREMENT,
                        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,
                        session_id TEXT,
                        metric_type TEXT,  -- DAILY/WEEKLY/MONTHLY
                        total_trades INTEGER,
                        total_volume REAL,
                        total_pnl REAL,
                        win_rate REAL,
                        avg_trade_pnl REAL,
                        max_drawdown REAL,
                        sharpe_ratio REAL,
                        details TEXT  -- JSON
                    )
   CREATE TABLE trades_backup(
  id INT,
  timestamp NUM,
  session_id TEXT,
  symbol TEXT,
  side TEXT,
  quantity REAL,
  price REAL,
  total_value REAL,
  order_id TEXT,
  grid_level INT,
  strategy TEXT,
  status TEXT,
  commission REAL,
  commission_asset TEXT,
  profit_loss REAL,
  execution_time_ms INT,
  notes TEXT,
  raw_order_data TEXT,
  created_at NUM
)

2Ô∏è‚É£ Trades Table Analysis:
   Columns:
     id (INTEGER)
     timestamp (DATETIME)
     session_id (TEXT)
     symbol (TEXT)
     side (TEXT)
     quantity (REAL)
     price (REAL)
     total_value (REAL)
     order_id (TEXT)
     grid_level (INTEGER)
     strategy (TEXT)
     status (TEXT)
     commission (REAL)
     commission_asset (TEXT)
     profit_loss (REAL)
     execution_time_ms (INTEGER)
     notes (TEXT)
     raw_order_data (TEXT)
     created_at (DATETIME)
     datetime (TEXT)
   Total trades: 37

   Sample trades:
     Trade 1: (1, '2025-06-26 18:51:39', 'session_1751027187_304416', 'ADAUSDT', 'BUY', 91.0, 0.5522, 50.25, '7213732839', 1, 'GRID', 'FILLED', 0.05025, 'USDT', 0.0, 2500, 'Manual entry - missing from original DB', None, '2025-07-01 04:52:01', '2025-06-26 18:51:39')
     Trade 2: (2, '2025-06-26 19:10:56', 'session_1751027187_304416', 'AVAXUSDT', 'BUY', 2.92, 17.15, 50.08, '4713973623', 1, 'GRID', 'FILLED', 0.00292, 'AVAX', 0.0, 2300, 'Manual entry - missing from original DB', None, '2025-07-01 04:52:07', '2025-06-26 19:10:56')
     Trade 3: (3, '2025-06-27 18:40:42', 'session_1751027187_304416', 'AVAXUSDT', 'BUY', 2.91, 17.18, 49.9938, '4716460829', 1, 'GRID', 'FILLED', 0.00291, 'AVAX', 0.0, 2492, None, '{"symbol": "AVAXUSDT", "orderId": 4716460829, "orderListId": -1, "clientOrderId": "x-HNA2TXFJbb62cb21c0d3715081c1a0", "transactTime": 1751049642427, "price": "0.00000000", "origQty": "2.91000000", "executedQty": "2.91000000", "origQuoteOrderQty": "0.00000000", "cummulativeQuoteQty": "49.99380000", "status": "FILLED", "timeInForce": "GTC", "type": "MARKET", "side": "BUY", "workingTime": 1751049642427, "fills": [{"price": "17.18000000", "qty": "2.91000000", "commission": "0.00291000", "commissionAsset": "AVAX", "tradeId": 379074150}], "selfTradePreventionMode": "EXPIRE_MAKER"}', '2025-07-01 04:52:13', '2025-06-27 18:40:42')
     Trade 4: (4, '2025-06-28 16:30:22', 'session_1751027187_304416', 'AVAXUSDT', 'SELL', 2.85, 17.91, 51.0435, '4717466296', 1, 'GRID', 'FILLED', 0.0510435, 'USDT', 0.0, 2457, None, '{"symbol": "AVAXUSDT", "orderId": 4717466296, "orderListId": -1, "clientOrderId": "x-HNA2TXFJ58a00d387313a0f504545f", "transactTime": 1751128223339, "price": "0.00000000", "origQty": "2.85000000", "executedQty": "2.85000000", "origQuoteOrderQty": "0.00000000", "cummulativeQuoteQty": "51.04350000", "status": "FILLED", "timeInForce": "GTC", "type": "MARKET", "side": "SELL", "workingTime": 1751128223339, "fills": [{"price": "17.91000000", "qty": "2.85000000", "commission": "0.05104350", "commissionAsset": "USDT", "tradeId": 379127987}], "selfTradePreventionMode": "EXPIRE_MAKER"}', '2025-07-01 04:52:20', '2025-06-28 16:30:22')
     Trade 5: (5, '2025-06-29 23:08:46', 'session_1751027187_304416', 'ADAUSDT', 'SELL', 90.0, 0.5803, 52.227, '7223770896', 1, 'GRID', 'FILLED', 0.052227, 'USDT', 0.0, 1828, None, '{"symbol": "ADAUSDT", "orderId": 7223770896, "orderListId": -1, "clientOrderId": "x-HNA2TXFJ36c4669ffe13feba5720a", "transactTime": 1751238526589, "price": "0.00000000", "origQty": "90.00000000", "executedQty": "90.00000000", "origQuoteOrderQty": "0.00000000", "cummulativeQuoteQty": "52.22700000", "status": "FILLED", "timeInForce": "GTC", "type": "MARKET", "side": "SELL", "workingTime": 1751238526589, "fills": [{"price": "0.58030000", "qty": "90.00000000", "commission": "0.05222700", "commissionAsset": "USDT", "tradeId": 673849061}], "selfTradePreventionMode": "EXPIRE_MAKER"}', '2025-07-01 04:52:25', '2025-06-29 23:08:46')

   Column test - SELECT symbol, side, quantity, price, timestamp:
     ‚úÖ SUCCESS: ('ADAUSDT', 'BUY', 91.0, 0.5522, '2025-06-26 18:51:39')

3Ô∏è‚É£ Bot Events:
   Total events: 5790
     BOT_START: 28
     BOT_STOP: 24
     CYCLE_COMPLETE: 5339
     EMERGENCY_STOP: 1
     GRID_INIT: 27
     GRID_RESET: 12
     MANUAL_STOP: 6
     PAUSE: 5
     PORTFOLIO_ERROR: 2
     PORTFOLIO_UPDATE: 64
     RESUME: 2
     RISK_MODE_CHANGE: 1
     START: 15
     STOP: 11
     TELEGRAM_COMMAND: 236
     TELEGRAM_CONSERVATIVE_MODE: 1
     TELEGRAM_EMERGENCY_STOP: 1
     TEST_EVENT: 1
     TRADE_ATTEMPT: 5
     TRADING_PAUSED: 1
     TRADING_RESUMED: 8


üß™ Testing Compound Manager Query
==================================================
Query:
            SELECT symbol, side, quantity, price, timestamp
            FROM trades
            ORDER BY timestamp ASC

Result: 0 trades found
‚ùå No trades returned by compound query!
Total trades in table: 0

üéØ NEXT STEPS:
1. Check if trades are in a different table
2. Check if column names are different
3. Check if database path is wrong in code
4. Look for backup databases
(trading-bot) aberdeev@aa004119nb ~/c/trading-bot (master)> python3 path_diagnostic.py

üöÄ Trading Bot Path Diagnostic
======================================================================
üìÇ Working Directory Diagnostic
==================================================
Current working directory: /home/aberdeev/crypto-trading/trading-bot
Script location: /home/aberdeev/crypto-trading/trading-bot
Python path: ['/home/aberdeev/crypto-trading/trading-bot', '/usr/lib/python310.zip', '/usr/lib/python3.10', '/usr/lib/python3.10/lib-dynload', '/home/aberdeev/crypto-trading/trading-bot/.venv/lib/python3.10/site-packages', '/home/aberdeev/crypto-trading/trading-bot']

üîç Path Resolution Test:
  Input: data/trading_history.db
  Resolves to: /home/aberdeev/crypto-trading/trading-bot/data/trading_history.db
  Exists: True
  Size: 32768 bytes

  Input: ./data/trading_history.db
  Resolves to: /home/aberdeev/crypto-trading/trading-bot/data/trading_history.db
  Exists: True
  Size: 32768 bytes

  Input: trading_bot/data/trading_history.db
  Resolves to: /home/aberdeev/crypto-trading/trading-bot/trading_bot/data/trading_history.db
  Exists: True
  Size: 1511424 bytes

  Input: ./trading_bot/data/trading_history.db
  Resolves to: /home/aberdeev/crypto-trading/trading-bot/trading_bot/data/trading_history.db
  Exists: True
  Size: 1511424 bytes

ü§ñ Bot Path Resolution Simulation
==================================================
1. Bot uses db_path: 'data/trading_history.db'
2. Path.cwd(): /home/aberdeev/crypto-trading/trading-bot
3. Combined path: /home/aberdeev/crypto-trading/trading-bot/data/trading_history.db
4. Exists: True
5. Size: 32768 bytes

üèÉ Running From Different Locations
==================================================
Currently in: /home/aberdeev/crypto-trading/trading-bot

If running from parent (/home/aberdeev/crypto-trading):
  Would look for: /home/aberdeev/crypto-trading/data/trading_history.db
  Exists: False
  Force fix path: /home/aberdeev/crypto-trading/trading_bot/data/trading_history.db
  Exists: False

üîé Finding All Trading Databases
==================================================
Searching from: /home/aberdeev/crypto-trading/trading-bot
Found 2 database files:
  üìÑ /home/aberdeev/crypto-trading/trading-bot/data/trading_history.db
     Size: 32768 bytes
     Trades: 0

  üìÑ /home/aberdeev/crypto-trading/trading-bot/trading_bot/data/trading_history.db
     Size: 1511424 bytes
     Trades: 37


üéØ RECOMMENDATIONS:
1. Run bot from the correct directory
2. Use absolute paths in code if needed
3. Check if database is in different location
4. Bot is currently looking at: /home/aberdeev/crypto-trading/trading-bot/data/trading_history.db
(trading-bot) aberdeev@aa004119nb ~/c/trading-bot (master)> tree .
.
‚îú‚îÄ‚îÄ data
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ trading_history.db
‚îú‚îÄ‚îÄ database_diagnostic.py
‚îú‚îÄ‚îÄ fix_asyncio_error.py
‚îú‚îÄ‚îÄ fix_compound_and_telegram.py
‚îú‚îÄ‚îÄ fix_import_error.py
‚îú‚îÄ‚îÄ fix_stuck_bot.sh
‚îú‚îÄ‚îÄ force_compund_fix.py
‚îú‚îÄ‚îÄ health_check.sh
‚îú‚îÄ‚îÄ log_analyzer.py
‚îú‚îÄ‚îÄ path_diagnostic.py
‚îú‚îÄ‚îÄ pyproject.toml
‚îú‚îÄ‚îÄ quick_log_check.sh
‚îú‚îÄ‚îÄ README.md
‚îú‚îÄ‚îÄ simple_integration.py
‚îú‚îÄ‚îÄ test_compund_fix.py
‚îú‚îÄ‚îÄ test_grid.py
‚îú‚îÄ‚îÄ trading_bot
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ binance_precision_fix.py
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ config
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ __init__.py
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ trading_config.py
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ data
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ emergency_trades.jsonl
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ logs
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ trading_bot_backup_20250709_095236.log
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ trading_bot.log
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ trading_history.db
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ __init__.py
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ lot_size_fix.py
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ main.py
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ main.py.backup
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ main.py.backup2
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ main.py.backup4
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ main.py.backup_telegram
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ strategies
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ grid_trading.py
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ __init__.py
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ __pycache__
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ grid_trading.cpython-310.pyc
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ __init__.cpython-310.pyc
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ test_trading_fixed.py
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ utils
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ binance_client.py
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ compound_manager.py
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ compound_manager.py.backup3
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ compound_manager.py.backup_force
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ database_logger.py
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ dynamic_sizing.py
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ error_monitor.py
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ indicators.py
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ __init__.py
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ market_timing.py
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ performance_dashboard.py
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ __pycache__
‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ binance_client.cpython-310.pyc
‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ compound_manager.cpython-310.pyc
‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ database_logger.cpython-310.pyc
‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ dynamic_sizing.cpython-310.pyc
‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ error_monitor.cpython-310.pyc
‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ __init__.cpython-310.pyc
‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ market_timing.cpython-310.pyc
‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ performance_dashboard.cpython-310.pyc
‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ risk_manager.cpython-310.pyc
‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ simple_profit_tracker.cpython-310.pyc
‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ telegram_commands.cpython-310.pyc
‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ telegram_notifier.cpython-310.pyc
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ risk_manager.py
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ simple_profit_tracker.py
‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ telegram_commands.py
‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ telegram_notifier.py
‚îú‚îÄ‚îÄ uv.lock
‚îî‚îÄ‚îÄ verify_bot_startup.sh

9 directories, 64 files
